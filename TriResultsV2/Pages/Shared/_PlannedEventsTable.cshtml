@using TriResultsV2.Models
@using TriResultsV2.Helpers
@model IEnumerable<PlannedEvent>

@{
    string tableId = $"tbl-planned-events";

    var distinctSports = new List<SportType>();

    if (Model != null)
    {
        distinctSports = Model.OrderBy(pe => pe.Sport).Select(pe => pe.Sport).Distinct().ToList();
    }
}
@if (distinctSports.Any())
{
    if (distinctSports.Count > 1)
    {
        <div class="mt-3">
            <div class="d-inline-block me-1">
                Sport:
            </div>
            <div class="d-inline-block">
                <select class="form-select" onchange="Tri.SportChanged(this, '@tableId')">
                    <option value="all" selected>Show All</option>
                    @foreach (var sport in distinctSports)
                    {
                        <option value="@sport.ToString()">@sport.ToString()</option>
                    }
                </select>
            </div>
        </div>
    }
}
<div class="table-responsive mt-3 mb-1">
    <table id="@tableId" class="table table-hover table-bordered align-top">
        <thead class="table-primary align-top">
        <tr>
            <th scope="col" class="col-5">Event</th>
            <th scope="col">
                <div class="d-block d-sm-none">Dist.</div>
                <div class="d-none d-sm-block">Distance</div>
            </th>
            <th scope="col">Date</th>
            <th scope="col">Entered?</th>
        </tr>
        </thead>
        <tbody>
        @if (Model != null)
        {
            int rowNumber = 1;

            @foreach (var plannedEvent in Model)
            {
                string rowCssClass = string.Empty;

                // Alternate row striping is done manually (not using table-striped) as need to re-apply after filtering.
                if (rowNumber % 2 != 0)
                {
                    rowCssClass += "tri-striped-row";
                }

                rowNumber++;
                <tr class="@rowCssClass" data-sport="@plannedEvent.Sport">
                    <td>
                        @if (!string.IsNullOrEmpty(plannedEvent.EventUrl))
                        {
                            <a href="@plannedEvent.EventUrl" target="_blank">@plannedEvent.EventName</a>
                        }
                        else
                        {
                            @plannedEvent.EventName
                        }
                    </td>
                    <td>
                        @if (plannedEvent.Distance.HasValue && plannedEvent.DistanceUnit.HasValue)
                        {
                            @EventHelper.GetFormattedDistance(plannedEvent.Distance.Value, plannedEvent.DistanceUnit.Value, plannedEvent.Sport)
                        }
                        else
                        {
                            <text>-</text>
                        }
                    </td>
                    <td>@plannedEvent.EventDate.ToString("dd/MM/yy")</td>
                    <td>@Html.Raw(plannedEvent.Entered.ToColouredYesNoHtml())</td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>