@using TriResultsV2.Models
@using TriResultsV2.Helpers
@model EventResultsTableVM

@{
    string resultTableId = $"tbl-{Model.ContentId}";
    var distinctCourses = Model.EventResults.Where(e => e.Course != null).OrderBy(e => e.Course).Select(e => e.Course).Distinct().ToList();
    var eventResultsSorted = Model.EventResults.OrderByDescending(e => e.EventDate).ToList();

    if (Model.PersonalRecordsTable)
    {
        eventResultsSorted = Model.EventResults.OrderBy(e => e.Distance).ToList();
    }
}
@if (!Model.PersonalRecordsTable && distinctCourses.Any())
{
    if (distinctCourses.Count > 1)
    {
        <div class="mt-3">
            <div class="d-inline-block me-1">
                Course:
            </div>
            <div class="d-inline-block">
                <select class="form-select" onchange="courseChanged(this, '@resultTableId')">
                    <option value="all" selected>Show All</option>
                    @foreach (var course in distinctCourses)
                    {
                        <option value="@course.ToString()">@course.GetEnumDisplayName()</option>
                    }
                </select>
            </div>
        </div>
    }
}
<div class="table-responsive mt-3 mb-1">
    <table id="@resultTableId" class="table table-hover table-striped table-bordered align-top">
        <thead class="table-primary align-top">
        <tr>
            <th scope="col" class="col-1">
                <div class="d-block d-sm-none">Dist.</div>
                <div class="d-none d-sm-block">Distance</div>
            </th>
            <th scope="col" class="col-2">Date</th>
            <th scope="col" class="col-5">Race</th>
            <th scope="col" class="col-2">Time</th>
            <th scope="col" class="col-2">
                @{
                    string colHeader = "Pace";

                    if (eventResultsSorted.Any())
                    {
                        var firstResult = eventResultsSorted.FirstOrDefault();

                        if (firstResult != null)
                        {
                            if (firstResult.Sport == SportType.Bike)
                            {
                                colHeader = "Speed";
                            }

                            if (firstResult.EventType == EventType.MultiStage)
                            {
                                colHeader = "Position";
                            }
                        }
                    }
                }
                @colHeader
            </th>
        </tr>
        </thead>
        <tbody>
        @if (eventResultsSorted.Any())
        {
            foreach (var result in eventResultsSorted)
            {
                string avgPaceSpeed = "-";

                if (result.Sport == SportType.Run)
                {
                    avgPaceSpeed = RunHelper.GetFormattedAvgPace(result.AvgRunPaceMinMi);
                }
                else if (result.Sport == SportType.Bike)
                {
                    avgPaceSpeed = BikeHelper.GetFormattedAvgSpeed(result.AvgBikeSpeedMph);
                }
                else if (result.Sport == SportType.Swim)
                {
                    avgPaceSpeed = SwimHelper.Get25MetreSwimPace(result.Distance, result.TotalTime);
                }

                string eventName = result.EventName;
                string rowCssClass = string.Empty;

                if (!Model.PersonalRecordsTable && result.PersonalBest)
                {
                    eventName = $"{eventName} (PB)";
                    rowCssClass = "fw-bold";
                }
                <tr class="@rowCssClass" data-course="@result.Course">
                    <td>@EventHelper.GetFormattedDistance(result.Distance, result.DistanceUnit, result.Sport)</td>
                    <td>@result.EventDate.ToString("dd/MM/yy")</td>
                    <td>
                        @if (result.GarminId.HasValue)
                        {
                            <a href="https://connect.garmin.com/modern/activity/@result.GarminId" target="_blank">@Html.Raw(eventName)</a>
                        }
                        else
                        {
                            @Html.Raw(eventName)
                        }
                    </td>
                    <td>@EventHelper.GetFormattedTime(result.TotalTime)</td>
                    <td>
                        @if (result.EventType == EventType.MultiStage)
                        {
                            @if (result.OverallPosition.HasValue)
                            {
                                <text>@EventHelper.GetFormattedPosition(result.OverallPosition) (@result.TotalParticipants)</text>
                            }
                        }
                        else
                        {
                            @avgPaceSpeed
                        }
                    </td>
                </tr>
                @if (result.EventFigures.Any())
                {
                    <tr data-course="@result.Course">
                        <td colspan="5">
                            <div class="figure-caption">
                                @foreach (var figure in result.EventFigures)
                                {
                                    <div>
                                        <i class="fas fa-info-circle"></i> @figure
                                    </div>
                                }
                            </div>
                        </td>
                    </tr>
                }
            }
        }
        </tbody>
    </table>
</div>